-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://github.com/pgadmin-org/pgadmin4/issues/new/choose if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.categories
(
    category_id integer NOT NULL,
    category_department_id integer NOT NULL,
    category_name character varying(45) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT categories_pkey PRIMARY KEY (category_id)
);

CREATE TABLE IF NOT EXISTS public.customers
(
    customer_id integer NOT NULL,
    customer_fname character varying(45) COLLATE pg_catalog."default" NOT NULL,
    customer_lname character varying(45) COLLATE pg_catalog."default" NOT NULL,
    customer_email character varying(45) COLLATE pg_catalog."default" NOT NULL,
    customer_password character varying(45) COLLATE pg_catalog."default" NOT NULL,
    customer_street character varying(255) COLLATE pg_catalog."default" NOT NULL,
    customer_city character varying(45) COLLATE pg_catalog."default" NOT NULL,
    customer_state character varying(45) COLLATE pg_catalog."default" NOT NULL,
    customer_zipcode character varying(45) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT customers_pkey PRIMARY KEY (customer_id)
);

CREATE TABLE IF NOT EXISTS public.departments
(
    department_id integer NOT NULL,
    department_name character varying(45) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT departments_pkey PRIMARY KEY (department_id)
);

CREATE TABLE IF NOT EXISTS public.order_items
(
    order_item_id integer NOT NULL,
    order_item_order_id integer NOT NULL,
    order_item_product_id integer NOT NULL,
    order_item_quantity integer NOT NULL,
    order_item_subtotal double precision NOT NULL,
    order_item_product_price double precision NOT NULL,
    CONSTRAINT order_items_pkey PRIMARY KEY (order_item_id)
);

CREATE TABLE IF NOT EXISTS public.orders
(
    order_id integer NOT NULL,
    order_date timestamp without time zone NOT NULL,
    order_customer_id integer NOT NULL,
    order_status character varying(45) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT orders_pkey PRIMARY KEY (order_id)
);

CREATE TABLE IF NOT EXISTS public.products
(
    product_id integer NOT NULL,
    product_category_id integer NOT NULL,
    product_name character varying(45) COLLATE pg_catalog."default" NOT NULL,
    product_description character varying(255) COLLATE pg_catalog."default" NOT NULL,
    product_price double precision NOT NULL,
    product_image character varying(255) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT products_pkey PRIMARY KEY (product_id)
);

ALTER TABLE IF EXISTS public.categories
    ADD CONSTRAINT category_department_id FOREIGN KEY (category_department_id)
    REFERENCES public.departments (department_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;
CREATE INDEX IF NOT EXISTS fki_category_department_id
    ON public.categories(category_department_id);


ALTER TABLE IF EXISTS public.order_items
    ADD CONSTRAINT order_item_order_id FOREIGN KEY (order_item_order_id)
    REFERENCES public.orders (order_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;
CREATE INDEX IF NOT EXISTS fki_order_item_order_id
    ON public.order_items(order_item_order_id);


ALTER TABLE IF EXISTS public.order_items
    ADD CONSTRAINT order_item_product_id FOREIGN KEY (order_item_product_id)
    REFERENCES public.products (product_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;
CREATE INDEX IF NOT EXISTS fki_order_item_product_id
    ON public.order_items(order_item_product_id);


ALTER TABLE IF EXISTS public.orders
    ADD CONSTRAINT order_customer_id FOREIGN KEY (order_customer_id)
    REFERENCES public.customers (customer_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;
CREATE INDEX IF NOT EXISTS fki_order_customer_id
    ON public.orders(order_customer_id);


ALTER TABLE IF EXISTS public.products
    ADD CONSTRAINT product_category_id FOREIGN KEY (product_category_id)
    REFERENCES public.categories (category_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;
CREATE INDEX IF NOT EXISTS fki_product_category_id
    ON public.products(product_category_id);

END;